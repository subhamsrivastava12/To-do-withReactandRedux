{"version":3,"sources":["redux/action.js","components/Todoinput.js","redux/state.js","components/Todoitem.js","components/Todolist.js","components/header.js","App.js","reportWebVitals.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","Todoinput","useState","name","setName","dispatch","useDispatch","className","onChange","e","target","value","type","required","id","onClick","todo","uuid","payload","d","Date","date","getDate","getMonth","getFullYear","todos","library","add","faTrash","faEdit","Todoitem","edit","setEdit","duration","easing","updateTodo","icon","todoID","Todolist","useSelector","state","map","Header","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newTodos","action","push","filter","index","i","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca0c7d11.chunk.js","sourcesContent":["export const ADD_TODO=\"ADD_TODO\";\r\nexport const DELETE_TODO=\"DELETE_TODO\";\r\nexport const UPDATE_TODO=\"UPDATE_TODO\";\r\n\r\nexport function addTodo(todo){\r\n    return{\r\n        type:ADD_TODO,\r\n        payload:todo,\r\n    }\r\n}\r\nexport function deleteTodo(todoID){\r\n    return{\r\n        type:DELETE_TODO,\r\n        payload:todoID,\r\n    }\r\n}\r\nexport function updateTodo(todo){\r\n    return{\r\n        type:UPDATE_TODO,\r\n        payload:todo,\r\n    }\r\n}","import React,{useState}  from 'react';\r\nimport { addTodo } from '../redux/action';\r\nimport {v1 as uuid} from 'uuid';\r\nimport './Todoinput.css';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n/**\r\n* @author\r\n* @function Todoinput\r\n**/\r\n\r\nconst Todoinput = () => {\r\n  let [name,setName]=useState();\r\n  let dispatch=useDispatch();\r\n  \r\n  return(\r\n    \r\n    <div className=\"row m-5 my-5 align-items-center justify-content-center\">\r\n        \r\n        <input onChange={(e)=>setName(e.target.value)}\r\n        value={name}\r\n         type=\"text\" className=\"col-sm-10 form-control \" required/>\r\n\r\n        <button id=\"add\"  onClick={()=>{\r\n          dispatch(addTodo(\r\n          {\r\n          id:uuid(),\r\n          name:name\r\n          }\r\n          ));\r\n        setName('');\r\n        }}\r\n         className=\"col-sm-2 btn btn-primary mx-2 my-2\">Add</button>\r\n         \r\n    </div>\r\n    \r\n   )\r\n  }\r\n\r\n\r\nexport default Todoinput"," var d = new Date();\r\n  export     var date=\" \"+d.getDate()+\" : \"+(d.getMonth()+1) +\" : \"+d.getFullYear();\r\n\r\nexport let todos=[\r\n  {\r\n  id:1,\r\n  name:\"this is just a demonstration \"\r\n  },\r\n  {\r\n    id:2,\r\n    name:\"Add your events\"\r\n  },\r\n  {\r\n    id:3,\r\n    name:\"Edit/Delete your events\"\r\n  }\r\n\r\n    \r\n]","import React,{useState} from 'react';\r\nimport './todoitem.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deleteTodo, updateTodo} from './../redux/action';\r\nimport {date} from './../redux/state';\r\nimport {library, text} from '@fortawesome/fontawesome-svg-core';\r\nimport {faTrash,faEdit} from '@fortawesome/free-solid-svg-icons';\r\nimport Flipmove from 'react-flip-move';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nlibrary.add(faTrash);\r\nlibrary.add(faEdit);\r\n\r\n\r\n\r\n/**\r\n* @author\r\n* @function Todoitem\r\n**/\r\n\r\nconst Todoitem = ({todo}) => {\r\n  const [edit,setEdit]=useState(false);\r\n  const[name,setName]=useState(todo.name);\r\n  \r\n\r\n  let dispatch=useDispatch();\r\n  return(\r\n   \r\n    <div>\r\n      <Flipmove duration={1000} easing=\"ease-in-out\">\r\n\r\n      \r\n        <div id=\"todoitem\" className=\"m-3 mx-3 my-3 align-items-center \">\r\n           <div className=\"row m-3\">\r\n            \r\n            <div id=\"item\"className=\"col mx-2\">{edit?<input type=\"text\" className=\"form-control\" value={name} onChange={\r\n              (e)=>setName(e.target.value)\r\n            }/>:<h4>{todo.name}</h4>}</div>\r\n            </div> \r\n            \r\n            <div className=\"row m-3 justify-content-center\">\r\n            <div  id=\"edit\" onClick={()=>{\r\n              dispatch(updateTodo({\r\n                ...todo,\r\n                name:name\r\n              }));\r\n              setEdit(!edit);\r\n              \r\n            }}\r\n            className=\"col-sm-2 btn btn-warning m-3 mx-2 my-2\">{edit?\"Update\":<FontAwesomeIcon className=\"faicon\" icon=\"edit\"/>}</div>\r\n            <div id=\"delete\" onClick={()=>dispatch(deleteTodo(todo.id))} \r\n            className=\"col-sm-2 btn btn-danger mx-2 my-2 m-3\">\r\n            <FontAwesomeIcon  className=\"faicon\" icon=\"trash\"/>\r\n            \r\n            </div>\r\n            \r\n        \r\n\r\n        </div>\r\n        </div>\r\n        \r\n        </Flipmove>\r\n    </div>\r\n    \r\n   )\r\n  }\r\n\r\n\r\nexport default Todoitem","import React from 'react'\r\nimport Todoitem from './Todoitem';\r\nimport './Todolist.css';\r\nimport {useSelector} from 'react-redux';\r\nimport Flipmove from 'react-flip-move';\r\n/**\r\n* @author\r\n* @function Todolist\r\n**/\r\n\r\nconst Todolist = () => {\r\n  let todos = useSelector(state=>state)\r\n  return(\r\n    <div className=\"container my-5\" >\r\n       \r\n      {todos.map(todo =>{\r\n       \r\n        return <Todoitem key={todo.id} todo={todo} /> \r\n      }\r\n        )}\r\n   \r\n      \r\n    \r\n    </div>\r\n   )\r\n  }\r\n\r\n\r\nexport default Todolist\r\n","import React from 'react';\r\nimport './header.css';\r\nimport {date} from './../redux/state';\r\n\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n  return(\r\n    <div>\r\n        <header>\r\n          \r\n          <h4 className=\"m-2 \"id=\"date\">{date}</h4>\r\n        <nav className=\"title m-auto justify-content-center\" >\r\n            <h3>ADD YOUR UPCOMING EVENTS</h3>\r\n        </nav>\r\n        \r\n        </header>\r\n\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Header","import './App.css';\nimport Todoinput from './components/Todoinput.js';\nimport Todolist from './components/Todolist.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from './components/header';\nimport {library, text} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\nimport Flipmove from 'react-flip-move';\n\nlibrary.add(faTrash);\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <Header/>\n      <Todoinput/>\n      \n      <Todolist/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore} from 'redux';\r\nimport {reducer} from './reducer';\r\n\r\nexport let store=createStore(reducer);","import {ADD_TODO,DELETE_TODO,UPDATE_TODO}from './action';\r\nimport { todos,date } from './state';\r\n\r\nexport let reducer = (state=todos,action)=>{\r\n    let newTodos;\r\n    switch(action.type){\r\n        case ADD_TODO:\r\n            newTodos=[...state];\r\n            newTodos.push(action.payload);\r\n            return newTodos;\r\n        case DELETE_TODO:\r\n             newTodos=[...state];\r\n            newTodos=newTodos.filter(todo=>todo.id!=action.payload);\r\n            return newTodos;\r\n            \r\n        case UPDATE_TODO:\r\n            newTodos=[...state];\r\n            let index=-1;\r\n            for (let i=0;i<newTodos.length;i++){\r\n                if(newTodos[i].id==action.payload.id){\r\n                    index=i;\r\n                    break;\r\n                }\r\n            }\r\n            if(index!=-1){\r\n                newTodos[index]=action.payload;\r\n                return newTodos;\r\n            }\r\n            break;               \r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}